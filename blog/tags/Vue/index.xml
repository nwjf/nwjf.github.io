<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>vue on nwjf Blog</title>
    <link>/blog/tags/vue/</link>
    <description>Recent content in vue on nwjf Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 15 Oct 2019 16:14:13 +0000</lastBuildDate><atom:link href="/blog/tags/vue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vue-cli(3.x)</title>
      <link>/blog/posts/vuecli3x/</link>
      <pubDate>Tue, 15 Oct 2019 16:14:13 +0000</pubDate>
      
      <guid>/blog/posts/vuecli3x/</guid>
      <description>不知不觉中vue-cli都升级到3.x了，赶快看下文档来学习下 第一步升级 vue cli 要求node 8+ node方面就不在做详细解答。 npm install -g @vue/cli # OR yarn global add @vue/cli # 检查版本 vue --version 具体结果就不在展示，直接进入下一步 创建项目 3.x给出了多种创建项目的方法， vue create demo Vue CLI v3.1.0 ? Please pick a preset: (Use arrow keys) &amp;gt; default (babel, eslint) Manually select features 使用上下键</description>
    </item>
    
    <item>
      <title>Vue(2.x) -- 组件</title>
      <link>/blog/posts/vue2x-3/</link>
      <pubDate>Mon, 20 Aug 2018 22:14:13 +0000</pubDate>
      
      <guid>/blog/posts/vue2x-3/</guid>
      <description>什么是vue组件： 组件（Component）是 Vue.js 最强大的功能之一。 组件可以扩展 HTML 元素，封装可重用的代码。 下面全部按照分开试写法讲解，分开与不分开写都一样， vue中组件同样具有三部分（template, script, style）组成以.vue结尾文件。 注册组件 全局注册 全局注册的组件可以用在其被</description>
    </item>
    
    <item>
      <title>Vue(2.x) -- vue生命周期钩子</title>
      <link>/blog/posts/vue2x-2/</link>
      <pubDate>Sun, 08 Jul 2018 22:36:17 +0000</pubDate>
      
      <guid>/blog/posts/vue2x-2/</guid>
      <description>生命周期：Vue 实例从开始创建、初始化数据、编译模板、挂载Dom→渲染、更新→渲染、卸载等一系列过程，我们称这是 Vue 的生命周期，各个阶段有相对应的事件钩子 vue生命周期钩子图 为了让更清楚了解vue的生命周期钩子，把所有钩子写成表格， 生命周期钩子 组件介绍 说明 beforeCreate 在实例初始化之后。thi</description>
    </item>
    
    <item>
      <title>Vue(2.x) -- 项目配置 (cli 2.x)</title>
      <link>/blog/posts/vue2x-1/</link>
      <pubDate>Wed, 06 Jun 2018 12:21:28 +0000</pubDate>
      
      <guid>/blog/posts/vue2x-1/</guid>
      <description>上一篇讲解了vue-cli的使用，这一片讲解vue项目的配置文件，如果还不会vue-cli构建项目的，请先阅读Vue入坑之路(一) &amp;ndash; vue-cli 文档链接 npm 文档 Vue.js中文文档 Vue-webpack配置文档 npm 配置 - package.json package.json json文件不支持注释，请不要在json中注释， { &amp;#34;name&amp;#34;: &amp;#34;vue-demo&amp;#34;, // 项目名称 &amp;#34;version&amp;#34;: &amp;#34;1.0.0&amp;#34;, //</description>
    </item>
    
    <item>
      <title>vue-cli(2.x)</title>
      <link>/blog/posts/vuecli2x/</link>
      <pubDate>Wed, 02 May 2018 22:14:13 +0000</pubDate>
      
      <guid>/blog/posts/vuecli2x/</guid>
      <description>欢迎访问我的博客 关于vue的第一篇文章写了vue-cli，后续文章中会详细介绍vue的用法，以及VUEX的使用方法，esLint,webpack,源码等详细文章，欢迎浏览。 vue-cli 是一个官方发布 vue.js 项目脚手架，使用 vue-cli 可以快速创建 vue 项目，GitHub地址是：vue-cli 一、node.js</description>
    </item>
    
    <item>
      <title>Vue(2.x) -- v-model详解</title>
      <link>/blog/posts/vue2x-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/posts/vue2x-4/</guid>
      <description>vue数据是双向绑定对开发者带来了不少的便利， 而父子组件之间的通信却是单向数据流， v-model命令 v-model是Vue用于表单元素上创建双向数据绑定，它本质是一个语法糖，在单向数据绑定的基础上，增加了监听用户输入事件并更新数据的功能 v-model命令 是v-bind:value</description>
    </item>
    
  </channel>
</rss>
